name: Build Tkinter App

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install dependencies
        run: |
          pip install pyinstaller
          pip install matplotlib numpy scipy Pillow
          
      # Handle matplotlib cache for quick opening
      - name: Ensure Matplotlib cache folder exists
        run: |
          mkdir -p ~/.cache/matplotlib
          mkdir -p ~/.matplotlib
          
      - name: Pre-warm Matplotlib font cache
        run: |
          python -c "import matplotlib.pyplot as plt; plt.figure(); plt.plot(); plt.close()"

      # Handle pdf exportation    
      - name: Check that details.pdf exists
        run: ls -l details.pdf

      - name: Disable Git line-ending normalization
        run: git config --global core.autocrlf false

      - uses: actions/checkout@v4

      # Mac os build 
      - name: Build executable (macOS)
        if: runner.os == 'macOS'
        run: |
          CACHE_DIR=$(python -c "import matplotlib; print(matplotlib.get_cachedir())")
          PDF_PATH="$(pwd)/details.pdf"
          LOGO_PATH="$(pwd)/logo.png"
      
          echo "Matplotlib cache: $CACHE_DIR"
          echo "PDF path: $PDF_PATH"
          echo "Logo path: $LOGO_PATH"
      
          # Verify files exist
          ls -lh "$PDF_PATH" "$LOGO_PATH"

          pyinstaller --onedir --windowed \
            --add-data ".:." \
            --add-data "$LOGO_PATH:." \
            --add-data "$PDF_PATH:." \
            --add-data "$CACHE_DIR:matplotlib_cache" \
            ui.py

      # Windows build
      - name: Build executable (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          $cacheDir = python -c "import matplotlib; print(matplotlib.get_cachedir())"
          $pdfPath = Join-Path $pwd "details.pdf"
          $logoPath = Join-Path $pwd "logo.png"
      
          Write-Host "Matplotlib cache: $cacheDir"
          Write-Host "PDF path: $pdfPath"
          Write-Host "Logo path: $logoPath"

          Get-Item $pdfPath, $logoPath
      
          pyinstaller --onefile --noconsole `
            --add-data ".:." `
            --add-data "$logoPath;." `
            --add-data "$pdfPath;." `
            --add-data "$cacheDir;matplotlib_cache" `
            ui.py

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: MyApp-${{ matrix.os }}
          path: dist/
